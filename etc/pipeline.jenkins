pipeline {
    agent {
        dockerfile {
            filename "etc/dockerfile.jenkins"
            args '--network=ci.network'
        }
    }

    environment {
        RND = "${BUILD_NUMBER}_${BRANCH_NAME}"
    }


    stages {
    	stage ('Where Am I') {
            steps {
                sh "uname -a"
                sh "php -v"
                sh "composer -V"
            }
        }
        stage ('Pre Fetch Vendor (Get Platform)') {
            steps {
               sh "cd ${WORKSPACE} && composer install --no-ansi --no-interaction --no-scripts --prefer-dist"
            }
        }
	stage ('Set Env') {
            steps {
                sh "ln -fs ${WORKSPACE}/vendor/sil-project/platform/.env.jenkins ${WORKSPACE}/.env"
                sh "cat ${WORKSPACE}/.env"
            }
        }
	stage ('Prepare Host') {
            steps {
                sh "${WORKSPACE}/vendor/sil-project/platform//bin/ci-scripts/do_run.sh before_install_test.sh"
            }
        }
        stage ('Create Database') {
            steps {
                sh "${WORKSPACE}/vendor/sil-project/platform//bin/ci-scripts/do_run.sh set_db_host_test.sh # needed before create as it set .pgpass"
                sh "${WORKSPACE}/vendor/sil-project/platform//bin/ci-scripts/do_run.sh create_database_test.sh"
            }
        }
        stage ('Build Project') {
            steps {
                sh "${WORKSPACE}/vendor/sil-project/platform//bin/ci-scripts/do_run.sh install_test.sh"
            }
        }
        stage ('Start Project') {
            steps {
                sh "${WORKSPACE}/vendor/sil-project/platform//bin/ci-scripts/do_run.sh before_script_test.sh"
            }
	}

        stage ('Start Selenium') {
            steps {
                sh "${WORKSPACE}/vendor/sil-project/platform//bin/ci-scripts/do_run.sh launch_selenium_test.sh"
            }
	}

        stage ('Run Test') {
            steps {
                sh "${WORKSPACE}/vendor/sil-project/platform//bin/ci-scripts/do_run.sh run_test.sh"
            }
	}
    }

    post {
        always {
            cleanWs()
        }
    }

}
