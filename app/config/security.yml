# To get started with security, check out the documentation:
# http://symfony.com/doc/current/book/security.html

parameters:
    sonata.security.regex: "^%librinfo.url_prefix%(?:/.*)?$"
    sylius.security.admin_regex: "^/sylius-admin"
    sylius.security.api_regex: "^/api"
    sylius.security.shop_regex: ""

security:

    role_hierarchy:

        ROLE_ADMINISTRATION_ACCESS:
            - ROLE_USER

        ROLE_SONATA_ADMIN:
            - ROLE_ADMINISTRATION_ACCESS

        ROLE_SUPER_ADMIN:
            - ROLE_SONATA_ADMIN
            - ROLE_ALLOWED_TO_SWITCH

    encoders:
        Sylius\Component\User\Model\UserInterface: sha512

    providers:
        sonata_user_provider:
            id: sylius.sonata_user_provider.email_or_name_based
        sylius_admin_user_provider:
            id: sylius.admin_user_provider.email_or_name_based
        sylius_shop_user_provider:
            id: sylius.shop_user_provider.email_or_name_based

    firewalls:
        # disables authentication for assets and the profiler, adapt it according to your needs
        dev:
            pattern:  "^/(_(profiler|wdt)|css|images|js)/"
            security: false

        # Sonata firewall :

        sonata:
            switch_user: true
            context: sonata
            pattern: "%sonata.security.regex%"
            form_login:
                provider: sonata_user_provider
                login_path: sonata_sylius_user_login
                check_path: sonata_sylius_user_login_check
                failure_path: sonata_sylius_user_login
                default_target_path: sonata_admin_dashboard
                use_forward: false
                use_referer: true
            logout:
                path: sonata_sylius_user_logout
                target: sonata_sylius_user_login
            anonymous: true

        # Sylius firewalls :

        sylius:
            switch_user: true
            context: admin
            pattern: "%sylius.security.admin_regex%"
            form_login:
                provider: sylius_admin_user_provider
                login_path: sylius_admin_login
                check_path: sylius_admin_login_check
                failure_path: sylius_admin_login
                default_target_path: sylius_admin_dashboard
                use_forward: false
                use_referer: true
            logout:
                path: sylius_admin_logout
                target: sylius_admin_login
            anonymous: true

        oauth_token:
            pattern:  "%sylius.security.api_regex%/oauth/v2/token"
            security: false

        api:
            pattern:    "%sylius.security.api_regex%"
            fos_oauth:  true
            stateless:  true
            anonymous:  true

        shop:
            switch_user: { role: ROLE_ALLOWED_TO_SWITCH }
            context: shop
            pattern: "%sylius.security.shop_regex%"
            form_login:
                success_handler: sylius.authentication.success_handler
                failure_handler: sylius.authentication.failure_handler
                provider: sylius_shop_user_provider
                login_path: sylius_shop_login
                check_path: sylius_shop_login_check
                failure_path: sylius_shop_login
                default_target_path: sylius_shop_homepage
                use_forward: false
                use_referer: true
            remember_me:
                secret: "%secret%"
                name: APP_REMEMBER_ME
                lifetime: 31536000
                remember_me_parameter: _remember_me
            logout:
                path: sylius_shop_logout
                target: sylius_shop_login
            anonymous: true

    access_control:

        # Sonata access control
        - { path: "^/(css|images|js)", role: IS_AUTHENTICATED_ANONYMOUSLY } # allow assets for anonymous users
        - { path: "^%librinfo.url_prefix%/resetting", role: IS_AUTHENTICATED_ANONYMOUSLY } # allow resetting password for anonymous users
        - { path: "^%librinfo.url_prefix%/login$", role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: "^%librinfo.url_prefix%/login-check$", role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: "^%librinfo.url_prefix%.*", role: ROLE_SONATA_ADMIN }

        # EmailBundle tracking
        - { path: ^/tracking, role: IS_AUTHENTICATED_ANONYMOUSLY }

        # Sylius access control
        - { path: "%sylius.security.admin_regex%/_partial", role: IS_AUTHENTICATED_ANONYMOUSLY, ips: [127.0.0.1, ::1] }
        - { path: "%sylius.security.admin_regex%/_partial", role: ROLE_NO_ACCESS }
        - { path: "%sylius.security.shop_regex%/_partial", role: IS_AUTHENTICATED_ANONYMOUSLY, ips: [127.0.0.1, ::1] }
        - { path: "%sylius.security.shop_regex%/_partial", role: ROLE_NO_ACCESS }

        - { path: "%sylius.security.admin_regex%/login", role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: "%sylius.security.api_regex%/login", role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: "%sylius.security.shop_regex%/login", role: IS_AUTHENTICATED_ANONYMOUSLY }

        - { path: "%sylius.security.shop_regex%/register", role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: "%sylius.security.shop_regex%/verify", role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: "%sylius.security.shop_regex%/order.*", role: IS_AUTHENTICATED_ANONYMOUSLY }

        - { path: "%sylius.security.shop_regex%/account", role: ROLE_USER }
        - { path: "%sylius.security.admin_regex%", role: ROLE_ADMINISTRATION_ACCESS }
        - { path: "%sylius.security.api_regex%", role: ROLE_API_ACCESS }


#jms_security_extra:
#    # Whether you want to secure all services (true), or only secure specific
#    # services (false); see also below
#    secure_all_services: false
#
#    # Enabling this setting will add an additional special attribute "ROLE_IDDQD".
#    # Anybody with this attribute will effectively bypass all security checks.
#    enable_iddqd_attribute: false
#
#    # Enables expression language
#    expressions: true
#
#    # Allows you to disable some, or all built-in voters
#    voters:
#        disable_authenticated: false
#        disable_role:          false
#        disable_acl:           true

#    # Allows you to specify access control rules for specific methods, such
#    # as controller actions
#    method_access_control:
#        'FOSUserBundle:SecurityController:logoutAction$': 'isAuthenticated()'
